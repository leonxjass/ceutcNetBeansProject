/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany.guiaarreglos2;

/**
 *
 * @author leonj
 */
public class proyectoFinalCalendario {
    
    public static boolean añoBiciesto(int anio){
        // Un año es bisiesto si es divisible por 4
        if (anio % 4 == 0) {
            // Si es divisible por 100 pero no por 400, no es bisiesto
            if (anio % 100 == 0 && anio % 400 != 0) {
                return false;
            }
            return true; // Si no es divisible por 100 o es divisible por 400, es bisiesto
        }
        return false; // Si no es divisible por 4, no es bisiesto
    }
    
    public static void valueBiciesto(int anio){
        if(añoBiciesto(anio)){
            System.out.println("El anio es biciesto");
        }else 
            System.out.println("No es biciesto");
    }
    
    public static void imprimeMes(int iniDiaMes, int nombreMes) {
    
    String mes[] = { "", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
        "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};
    
    //Validar que el nombre del mes esté dentro del rango válido (1-12)
    if (nombreMes < 1 || nombreMes > 13) {
        System.out.println("Nombre de mes no válido. Debe estar entre 1 y 12.");
        return;
    }

    // Obtener la cantidad de días en el mes
    int dm[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    int tDiaMes = dm[nombreMes];

    // Obtener el dia de la semana en la que inicia el mes
    int ds[] = {0,0,3,3,5,1,3,6,2,4,0,2,5};
    int iniDiaSemana = ds[iniDiaMes];

    int dia = 0;
    
    System.out.println(mes[nombreMes]);
    System.out.println("Do\tLu\tMa\tMi\tJu\tVi\tSa");

    for (int c = 0; c <= 42; c++) {
        if (c > iniDiaSemana && dia < tDiaMes) {
            dia = dia + 1;
            System.out.print(dia + "\t");
        } else {
            System.out.print(" " + "\t");
        }
        
        if (c % 7 == 0) {
            System.out.println("");
        }
    }
    
    System.out.println(" ");
}
    
    public static int calcularDiasEnMes(int mes, int anio) {
        int[] diasEnMes = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

        if (mes == 2 && añoBiciesto(anio)) {
            return 29;
        } else {
            return diasEnMes[mes];
        }
    }
    
    public static int calcularDiaInicioMes(int mes, int anio) {
        if (mes < 3) {
            mes += 12;
            anio--;
        }
        int k = anio % 100;
        int j = anio / 100;
        int h = (1 + ((13 * (mes + 1)) / 5) + k + (k / 4) + (j / 4) - (2 * j)) % 7;

        return (h + 6) % 7;
    }
    
    public static void imprimirCalendarioAnioEspecifico(int anioEspecifico) {
        
        if (anioEspecifico < -1 || anioEspecifico > 2099) {
            System.out.println("El año especificado está fuera del rango válido (-1 a 2031).");
            return;
        }

        System.out.println("Calendario del año " + anioEspecifico);

        // Iterar a través de los años, considerando años negativos (AC) y positivos (DC).
        for (int anio = -1; anio <= 2099; anio++) {
            if (anio == anioEspecifico) {
                // Calcular el año AC (antes de Cristo) correspondiente al año DC (después de Cristo).
                int anioAC = -anio;
                
                // Imprimir el calendario del año.
                System.out.println("Año " + (anio < 0 ? "AC" : "DC") + " " + anioAC);
                for (int mes = 1; mes <= 12; mes++) {
                    int diaInicioMes = calcularDiaInicioMes(mes, anioAC);
                    imprimeMes(diaInicioMes, mes);
                    System.out.println();
                }
                break;
            }
        }
    }
    
    
    
    public static void main(String[] args) {
        
    }
}
